@page "/"
@using BlazorApp.Client.Utils
@using BlazorApp.Shared
@inject AppState AppStateStore
@inject BackendApiRepository Api
@inject NavigationManager NavigationManager

<PageTitle>
    Bergfest
</PageTitle>

<div class="m-2 p-4 bg-light border">
    <EditArticle ArticleKey="Index">
        <h2>Cols und Sprints</h2>
        <p>
            Leistungen auf den Lieblingssegmenten.
        </p>
    </EditArticle>
</div>
<BlazorApp.Client.Shared.NotificationMessage @ref="@_notificationMessage" />

@if (null == _segments)
{
    <p><em>Daten werden geladen... Beim ersten Aufruf dauert das ein bisschen.</em></p>
}
else
{
    <p>
        <a class="btn-link" title="Strava Connect" href="/authorize"><img class="img-fluid" style="max-height:3em" src="/images/btn_strava_connectwith_orange@2x.png" alt="Strava Connect Button" /></a>
        <button class="btn btn-primary" title="Reload" @onclick="@(() => Reload())"><span class="oi oi-reload"></span></button>
        <a class="btn btn-primary" title="Aktivität nachreichen" alt="Aktivität nachreichen" href="/myactivity"><span class="oi oi-envelope-open"></span></a>
        <AuthorizeView Roles="admin,segmentadmin">
            <Authorized>
                <a class="btn btn-primary" href=@($"editsegment") title="Segment anlegen">Segment anlegen</a>
            </Authorized>
        </AuthorizeView>
    </p>
    <div class="row">
        @foreach (StravaSegmentWithEfforts segment in _segments)
        {
            <div class="col-12 col-sm-6 col-lg-4 col-xl-4 mt-2">
                <SegmentCard SegmentWithEfforts="@segment" OnReload="Reload"></SegmentCard>
            </div>
        }
    </div>
}
<AuthorizeView Roles="admin,segmentadmin">
    <Authorized>
        @if (null != _hiddenSegments && _hiddenSegments.Any())
        {
            <hr />
            <h4>Segmentbibliothek</h4>
            <p>Die folgenden Segmente werden momentan nicht angezeigt.</p>
            <div class="row">
                @foreach (StravaSegmentWithEfforts segment in _hiddenSegments)
                {
                    <div class="col-12 col-sm-6 col-lg-4 col-xl-4 mt-2">
                        <SegmentCard SegmentWithEfforts="@segment" OnReload="Reload"></SegmentCard>
                    </div>
                }
            </div>
        }
    </Authorized>
</AuthorizeView>



@code {
    private NotificationMessage? _notificationMessage;
    IEnumerable<StravaSegmentWithEfforts>? _segments = null;
    IEnumerable<StravaSegmentWithEfforts>? _hiddenSegments = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await Reload();
        }
        catch (Exception ex)
        {
            _notificationMessage?.ShowError($"Fehler: {ex.Message}");
            return;
        }
    }

    private async Task Reload()
    {
        try
        {
            _notificationMessage?.Hide();
            List<StravaSegmentWithEfforts> segmentsWithEfforts = new List<StravaSegmentWithEfforts>(await Api.GetSegmentsWithEfforts());
            _segments = segmentsWithEfforts.Where(s => s.StravaSegment.DisplayEnabled);
            _hiddenSegments = segmentsWithEfforts.Where(s => !s.StravaSegment.DisplayEnabled);    
        }
        catch (Exception ex)
        {
            _notificationMessage?.ShowError($"Fehler: {ex.Message}");
        }
    }

}
