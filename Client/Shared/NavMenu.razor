@using BlazorApp.Shared
@using BlazorApp.Client.Utils
@implements IDisposable
@inject AppState AppStateStore
@inject BackendApiRepository Api
@inject NavigationManager NavigationManager
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Bergfest</a><img class="img-fluid" style="height:1.5em" src="/images/api_logo_pwrdBy_strava_horiz_light.png" />
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Segmente
            </NavLink>
        </li>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Authorize">
                <span class="oi oi-link-intact" aria-hidden="true"></span> Strava Connect
            </NavLink>
        </div>
        <AuthorizeView Roles="admin,segmentadmin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="EditSegment">
                        <span class="oi oi-document" aria-hidden="true"></span> Neues Segment
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="About">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Über ...
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        AppStateStore.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        AppStateStore.OnChange -= StateHasChanged;
    }
}
